name: Preparing Release

on:
  push:
    branches:
      - 'release/*'

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7
        id: setup-py37
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Verify release branch with semver version
        run: |
          python3 .github/workflows/verify-version.py


  prepare-release:
    needs: check-version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Output env variables
        run: |
           echo "GITHUB_WORKFLOW=${GITHUB_WORKFLOW}"
           echo "GITHUB_ACTION=$GITHUB_ACTION"
           echo "GITHUB_ACTIONS=$GITHUB_ACTIONS"
           echo "GITHUB_ACTOR=$GITHUB_ACTOR"
           echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
           echo "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME"
           echo "GITHUB_EVENT_PATH=$GITHUB_EVENT_PATH"
           echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
           echo "GITHUB_SHA=$GITHUB_SHA"
           echo "GITHUB_REF=$GITHUB_REF"
           echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
           echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
           echo "::debug::---Start content of file $GITHUB_EVENT_PATH"
           cat $GITHUB_EVENT_PATH
           echo "\n"
           echo "::debug::---end"

      - name: Output release
        id: release
        run: |
          RELEASE="${GITHUB_REF#*/release/}"
          # test the output
          if [[ -z $RELEASE ]]; then
             echo "::error::GITHUB_REF created an invalid or empty entry"
             exit 10
          fi
          echo "::set-output name=release::$RELEASE"

      - name: Set up Python 3.7
        id: setup-py37
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install wheel dependencies
        id: install-wheel
        run: |
          python3 -m pip install --upgrade pip wheel

      - name: Build wheel
        id: wheel
        run: |
          python3 setup.py bdist_wheel
          echo "GITHUB_REF=$GITHUB_REF"

      - name: Create tag
        uses: hole19/git-tag-action@master
        env:
          TAG: ${{ steps.release.outputs.release }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/releases/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
