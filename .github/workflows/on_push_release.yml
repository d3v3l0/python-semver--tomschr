name: Preparing Release

on:
  push:
    branches:
      - 'release/*'

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Get semver version
        id: get-semver-version
        env:
          PATH: .:src/
        run: |
          python3 setup.py develop --user
          echo "::set-output name=version::$(python3 \
              -c 'import semver; print(semver.__version__, end="")')"

      - name: Verify release branch with semver version
        run: |
          SEMVER_VERSION="${{ steps.get-semver-version.outputs.version }}"
          RELEASE="${GITHUB_REF#*/release/}"
          if [[ $RELEASE != $SEMVER_VERSION ]]; then
            echo "::error::The semver version and the branch differ"
            echo "::error::Branch is '$RELEASE' and \
                semver contains '$SEMVER_VERSION'"
            exit 2
          else
            echo "::debug::semver version and branch are both '$SEMVER_VERSION'"
          fi

  prepare-release:
    needs: check-version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Output env variables
        run: |
           echo "GITHUB_WORKFLOW=${GITHUB_WORKFLOW}"
           echo "GITHUB_ACTION=$GITHUB_ACTION"
           echo "GITHUB_ACTIONS=$GITHUB_ACTIONS"
           echo "GITHUB_ACTOR=$GITHUB_ACTOR"
           echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
           echo "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME"
           echo "GITHUB_EVENT_PATH=$GITHUB_EVENT_PATH"
           echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
           echo "GITHUB_SHA=$GITHUB_SHA"
           echo "GITHUB_REF=$GITHUB_REF"
           echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
           echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
           echo "::debug::---Start content of file $GITHUB_EVENT_PATH"
           cat $GITHUB_EVENT_PATH
           echo "\n"
           echo "::debug::---end"

      - name: Set up Python 3.7
        id: setup-py37
        uses: actions/setup-python@v1
        with:
          python-version: 3.7


      - name: Install wheel dependencies
        id: install-wheel
        run: |
          python3 -m pip install --upgrade pip wheel

      - name: Build wheel
        id: wheel
        run: |
          python3 setup.py bdist_wheel
          echo "GITHUB_REF=$GITHUB_REF"
