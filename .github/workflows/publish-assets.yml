---
name: Publish Assets (Wheel & Source Dist)

on:
  push:
    tags:
     - "*"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Output env variables
        run: |
           echo "Default branch=${default-branch}"
           echo "GITHUB_WORKFLOW=${GITHUB_WORKFLOW}"
           echo "GITHUB_ACTION=$GITHUB_ACTION"
           echo "GITHUB_ACTIONS=$GITHUB_ACTIONS"
           echo "GITHUB_ACTOR=$GITHUB_ACTOR"
           echo "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
           echo "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME"
           echo "GITHUB_EVENT_PATH=$GITHUB_EVENT_PATH"
           echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
           echo "GITHUB_SHA=$GITHUB_SHA"
           echo "GITHUB_REF=$GITHUB_REF"
           echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
           echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
           echo "github.ref = ${{ github.ref }}"
           echo "github.workspace = ${{ github.workspace }}"
           echo "::debug::---Start content of file $GITHUB_EVENT_PATH"
           cat $GITHUB_EVENT_PATH
           echo "\n"
           echo "::debug::---end"
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Upgrade pip
        id: upgrade-pip
        run: |
          python3 -m pip install --upgrade pip

      - name: Install dependencies
        id: install-deps
        run: |
          pip install tox tox-gh-actions wheel

      - name: Build wheel/source dist
        id: build-dist
        run: |
          tox -e prepare-dist

      - name: Get tag name
        id: tag
        run: |
          # we need to cut refs/tags/ or refs/head/ (two slashes)
          # we can't use '${GITHUB_REF##*/}' so we do it stepwise
          ref=${GITHUB_REF#*/}
          ref=${ref#*/}
          echo ::set-output name=tagname::${ref}

      - name: Create Markdown file for body text
        id: bodytext
        run: |
          git tag --list --format='%(contents)' ${{ github.ref }} > body.md
          echo "::set-output name=file::body.md"
          echo "::set-output name=body::$(cat body.md)"

      - name: Get source distribution names
        id: sourcedist
        run: |
           # We list whl and .tar.gz, .tar.bz2, tar.xz, and .zip files
           # in case we change the output format
           W=$(ls dist/*.whl)
           echo "::set-output name=wheelname::${W#*/}"
           T=$(ls dist/*.{tar.{gz,bz2,xz},zip} 2>/dev/null || true)
           echo "::set-output name=tarname::${T#*/}"

      # - name: Create URL upload
      #   id: uploadurl
      #   run: |
      #      TAG=$(python3 'import urllib.parse as p; print(p.quote_plus("${{ steps.tag.outputs.tagname }}"))')
      #      URL=${{ github.repository.url }}/releases/tag/${TAG}/assets{?name,label}
      #      echo "::set-output name=upload_url::$URL"

      - name: Upload Release
        uses: meeDamian/github-release@v2.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag.outputs.tagname }}
          name: Release ${{ steps.tag.outputs.tagname }}
          files: dist/${{ steps.sourcedist.outputs.wheelname }}
          gzip: false
          draft: true
          prerelease: true
          body: ${{ steps.bodytext.outputs.body }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body_path: ${{ steps.bodytext.outputs.file }}
      #     draft: true
      #     prerelease: true    

      # - name: Upload Wheel Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info:
      #     # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: dist/${{ steps.sourcedist.outputs.wheelname }}
      #     asset_name: ${{ steps.sourcedist.outputs.wheelname }}
      #     asset_content_type: application/zip
